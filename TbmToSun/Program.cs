using SunCommon;
using TbmToSun;

if (args.Length == 0)
{
    Console.WriteLine(
@"TbmToSun:
  Converts TrackerBoy TBM modules to the ""Sun L"" sound driver format.
Usage:
  TbmToSun [options]
Options:
  --i                 The path to the TBM file.
  --o                 Path to the output folder.
                      This will be created, if missing.
 [--vibrato ""prefix""] If provided, specifies a prefix to vibrato instruments.
                      Instruments mapped to a vibrato must contain the prefix in their name, followed by a 2-digit hexadecimal number.
 [--sfx]              If provided, specifies to export the songs as sound effects.           
 [--title]            Name of the exported songs. 
                      If not provided, it will be autogenerated from the TBM module's song name fields.");
}
else
{
    var xargs = new KArgs(args);

    var inputFile = xargs.Get("i", true)!;
    var outputPath = xargs.Get("o", true)!;

    var isSfx = xargs.Exists("sfx");
    var title = xargs.Get("title");
    var vibratoPrefix = xargs.Get("vibrato");

    if (!Path.Exists(inputFile))
        Console.WriteLine($"\"{inputFile}\" does not exist.");
    else
    {
        using var input = new FileStream(inputFile, FileMode.Open, FileAccess.Read);
        var model = new TbmModule(input);

        using var writer = new MultiWriter(outputPath);
        OpWriter.Write(model, writer, title, isSfx, vibratoPrefix);
    }
}